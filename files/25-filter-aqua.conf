filter {
 
  if [_SRCIP] == "137.229.0.229" {

    grok {
      patterns_dir => "/opt/logstash/patterns"
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{SYSLOGHOST}: \*%{CISCOWLCPROCESS:wlc_process}: %{CISCOTIMESTAMP}: (?:%|#)%{CISCOTAG_:cisco_tag}: %{GREEDYDATA:wlc_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{SYSLOGHOST}: %{CISCOWLCTRACEBACK:wlc_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{INT}: (?:[\*\.])?%{CISCOTIMESTAMP}(?: %{WORD})?: %%{CISCOTAG_:cisco_tag}: %{GREEDYDATA:ios_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{CISCOTIMESTAMP}: %%{CISCOTAG:cisco_tag}: %{GREEDYDATA:asa_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{CISCOTIMESTAMP} %{IP} %{GREEDYDATA:apc_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{INT} %{INT}/%{INT}/%{INT} %{TIME} SEV=%{INT:c3k_severity} %{WORD:c3k_section}/%{INT:c3k_sectionN} RPT=%{INT:c3k_rpt} (?:%{IP:c3k_ip}(?:\s+))?%{GREEDYDATA:c3k_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGPROG}: %{GREEDYDATA:syslog_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:timestamp} %{GREEDYDATA:syslog_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGLASTMSG:syslog_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}> %{CISCOTAG_:packetshaper_tag}: %{GREEDYDATA:ps_message}" }
      match => { "message" => "<%{POSINT}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:syslog_hostname} <%{POSINT:syslog_pri}>%{CISCO_MSE_HEADER}%{GREEDYDATA:mse_message}" }
    }

    if "_grokparsefailure" not in [tags] {

      syslog_pri { }

      date {
        match => [ "timestamp", "MMM dd HH:mm:ss", "MMM d HH:mm:ss", "MMM dd yyyy HH:mm:ss", "MMM d yyyy HH:mm:ss", "MMM  d HH:mm:ss" ]
        timezone => "America/Anchorage"
      }

      mutate {
        replace => [ "host", "%{syslog_hostname}" ]
        remove_field => [ "timestamp", "syslog_hostname", "syslog_pri" ]
      }

      if [wlc_message] {
       mutate {
         add_tag => [ "WLC" ]
         replace => [ "message", "%{wlc_message}" ]
         remove_field => [ "wlc_message" ]
        }
      }  

      else if [ios_message] {
        mutate {
          add_tag => [ "IOS" ]
          replace => [ "message", "%{ios_message}" ]
          remove_field => [ "ios_message" ]
        }
      }

      else if [ps_message] {
        mutate {
          add_tag => [ "PacketShaper" ]
          replace => [ "message", "%{ps_message}" ]
          remove_field => [ "ps_message" ]
        }
      }

      else if [mse_message] {
        mutate {
          add_tag => [ "CiscoMSE" ]
          # gsub => [ "mse_message", "\tat", "\r\n\tat" ]
          replace => [ "message", "%{mse_message}" ]
          remove_field => [ "mse_message" ]
        }
      }

      else if [asa_message] {
        mutate {
          add_tag => [ "ASA" ]
          replace => [ "message", "%{asa_message}" ]
          remove_field => [ "asa_message" ]
        }
        grok {
          match => [
            "message", "%{CISCOFW106001}",
            "message", "%{CISCOFW106006_106007_106010}",
            "message", "%{CISCOFW106014}",
            "message", "%{CISCOFW106015}",
            "message", "%{CISCOFW106021}",
            "message", "%{CISCOFW106023}",
            "message", "%{CISCOFW106100}",
            "message", "%{CISCOFW110002}",
            "message", "%{CISCOFW302010}",
            "message", "%{CISCOFW302013_302014_302015_302016}",
            "message", "%{CISCOFW302020_302021}",
            "message", "%{CISCOFW305011}",
            "message", "%{CISCOFW313001_313004_313008}",
            "message", "%{CISCOFW313005}",
            "message", "%{CISCOFW402117}",
            "message", "%{CISCOFW402119}",
            "message", "%{CISCOFW419001}",
            "message", "%{CISCOFW419002}",
            "message", "%{CISCOFW500004}",
            "message", "%{CISCOFW602303_602304}",
            "message", "%{CISCOFW710001_710002_710003_710005_710006}",
            "message", "%{CISCOFW713172}",
            "message", "%{CISCOFW733100}",
            "message", "%{WORD:action} %{WORD:protocol} %{CISCO_REASON:reason} from %{DATA:src_interface}:%{IP:src_ip}/%{INT:src_port} to %{DATA:dst_interface}:%{IP:dst_ip}/%{INT:dst_port}; %{GREEDYDATA:dnssec_validation}",
            "message", "%{CISCO_ACTION:action} %{WORD:protocol} %{CISCO_REASON:reason}.*(%{IP:src_ip}).*%{IP:dst_ip} on interface %{GREEDYDATA:interface}",
            "message", "Connection limit exceeded %{INT:inuse_connections}/%{INT:connection_limit} for input packet from %{IP:src_ip}/%{INT:src_port} to %{IP:dst_ip}/%{INT:dst_port} on interface %{GREEDYDATA:interface}",
            "message", "TCP Intercept %{DATA:threat_detection} to %{IP:ext_nat_ip}/%{INT:ext_nat_port}.*(%{IP:int_nat_ip}/%{INT:int_nat_port}).*Average rate of %{INT:syn_avg_rate} SYNs/sec exceeded the threshold of %{INT:syn_threshold}.#%{INT}",
            "message", "Embryonic connection limit exceeded %{INT:econns}/%{INT:limit} for %{WORD:direction} packet from %{IP:src_ip}/%{INT:src_port} to %{IP:dst_ip}/%{INT:dst_port} on interface %{GREEDYDATA:interface}"
          ]
        }
        mutate {
          remove_tag => [ "tags", "_grokparsefailure" ]
        }
      }

      else if [apc_message] {
        mutate {
          add_tag => [ "UPS" ]
          replace => [ "message", "%{apc_message}" ]
          remove_field => [ "apc_message" ]
        }
      }

      else if [c3k_message] {
        mutate {
          add_tag => [ "VPN3000" ]
          replace => [ "message", "%{c3k_message}" ]
          remove_field => [ "c3k_message" ]
        }
      }

      else if [syslog_message] {
        mutate {
          add_tag => [ "syslog" ]
          replace => [ "message", "%{syslog_message}" ]
          remove_field => [ "syslog_message" ]
        }
      }

    } # if "_grokparsefailure" not in [tags]
  } # if [_SRCIP] == "137.229.0.229" ..
}

