---
- include: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

#- include: setup-Debian.yml
#  when: ansible_os_family == 'Debian'

- name: config IO
  template:
    src: "{{ item }}.j2"
    dest: "/etc/logstash/conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - 13-input-redis.conf
    - 30-output-elasticsearch.conf
  notify: svc restart ls
  
- name: config filters
  copy:
    src: "{{ item }}"
    dest: "/etc/logstash/conf.d/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items: ls_filters
  notify: svc restart ls

- name: config gist filters
  get_url:
    url: "{{item.url}}"
    dest: "/etc/logstash/conf.d/{{item.dest}}"
  with_items: ls_gist_filters

- name: config patterns
  copy:
    src: "{{ item }}.patterns"
    dest: "/opt/logstash/patterns/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items: ls_patterns
  notify: svc restart ls

- name: config gist patterns
  get_url:
    url: "{{ item.url }}"
    dest: "/opt/logstash/patterns/{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items: ls_gist_patterns
  notify: svc restart ls

- name: svc enable verbose
  lineinfile:
    dest: /etc/sysconfig/logstash
    regexp: ^LS_OPTS=
    line: LS_OPTS="--verbose"
  notify: svc restart ls

- name: load dashboards into es
  uri:
    url: "http://localhost:9200/kibana-int/dashboard/{{item.dest}}"
    method: PUT
    body: "{{ lookup('file','/var/www/html/kibana3/app/dashboards/'+item.dest) }}"
    body_format: raw
    status_code: 201
  with_items: kibana_views

- name: service enable, start
  service: "name=logstash state={{ls_svc_state}} enabled={{ ls_svc_enabled }}"
