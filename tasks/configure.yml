---

- name: filter templates
  template:
    src: "{{item.src}}"
    dest: "{{ls_conf_dir}}/{{item.dest}}"
    owner: "{{ls_owner}}"
    group: "{{ls_group}}"
    mode: "{{ls_mode}}"
  with_items: "{{ls_filters}}"
  when: item.type is defined and item.type == 'template'
  notify: svc restart ls
  
- name: filters files
  copy:
    src: "{{item.src}}"
    dest: "{{ls_conf_dir}}/{{item.dest}}"
    owner: "{{ls_owner}}"
    group: "{{ls_group}}"
    mode: "{{ls_mode}}"
  with_items: "{{ls_filters}}"
  when: item.type is not defined or ( item.type is defined and item.type == 'file' )
  notify: svc restart ls

- name: filter gists
  get_url:
    url: "https://gist.githubusercontent.com/{{item.gist}}/raw"
    dest: "{{ls_conf_dir}}/{{item.dest}}"
  with_items: "{{ls_filters}}"
  when: item.type is defined and item.type == 'gist'
  notify: svc restart ls

- name: create pattern dir
  file:
    path: "{{ls_pattern_dir}}"
    state: directory
    mode: '0755'

- name: pattern files
  copy:
    src: "{{item.src}}"
    dest: "{{ls_pattern_dir}}/{{item.dest}}"
    owner: "{{ls_owner}}"
    group: "{{ls_group}}"
    mode: "{{ls_mode}}"
  with_items: "{{ls_patterns}}"
  when: item.type is not defined or ( item.type is defined and item.type == 'file' )
  notify: svc restart ls

- name: pattern gists
  get_url:
    url: "https://gist.githubusercontent.com/{{item.gist}}/raw"
    dest: "{{ls_pattern_dir}}/{{ item.dest }}"
    owner: "{{ls_owner}}"
    group: "{{ls_group}}"
    mode: "{{ls_mode}}"
  with_items: "{{ls_patterns}}"
  when: item.type is defined and item.type == 'gist'
  notify: svc restart ls

- name: svc enable verbose
  lineinfile:
    dest: /etc/sysconfig/logstash
    regexp: ^LS_OPTS=
    line: LS_OPTS="--verbose"
  notify: svc restart ls

- name: service enable, start
  service:
    name={{ls_svc_name}}
    state={{ls_svc_state}}
    enabled={{ls_svc_enabled}}

